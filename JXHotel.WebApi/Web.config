<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  https://go.microsoft.com/fwlink/?LinkId=301879
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="jxHotelConfigSection" type="JXHotel.Infrastructure.Config.JXHotelConfigSection, JXHotel.Infrastructure" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />

    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
  </configSections>
  <appSettings></appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>
  <system.webServer>
    <handlers>
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Interception" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity.Configuration" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.1.505.0" newVersion="2.1.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Common" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.414.0" newVersion="5.0.414.0" />
      </dependentAssembly>
      
    </assemblyBinding>
  </runtime>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.3.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
   
  </entityFramework>
  <connectionStrings>
    <add name="JXHotel" connectionString="data source=(local)\SQLEXPRESS;initial catalog=JXHotel;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework" providerName="System.Data.SqlClient" />   
  </connectionStrings>
  
  <!--log4-->
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Logs\balog.txt" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="10" />
      <maximumFileSize value="100KB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="%newline%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <logger name="Logger">
      <level value="ERROR" />
      <level value="INFO" />
      <appender-ref ref="RollingFileAppender" />
    </logger>
  </log4net>
  
  <!--jxHotelConfigSection-->
  <jxHotelConfigSection xmlns="urn:JXHotel.Infrastructure.Config">
    <emailClient host="smtp.163.com" port="25" userName="jxhotelbyjustunion" password="jxhotel123" enableSsl="false" sender="jxhotelbyjustunion@163.com" />
  </jxHotelConfigSection>

 
  <!--caching-->
  <cachingConfiguration defaultCacheManager="JXHotelCacheManager">
    <cacheManagers>
      <add name="JXHotelCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" expirationPollFrequencyInSeconds="600" maximumElementsInCacheBeforeScavenging="1000" numberToRemoveWhenScavenging="10" backingStoreName="NullBackingStore" />
    </cacheManagers>
    <backingStores>
      <add type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="NullBackingStore" />
    </backingStores>
  </cachingConfiguration>
  

  <unity>
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <container>
      <extension type="Interception" />
      
      <!--Repository-->
      <register type="JXHotel.Domain.Repository.IRepositoryContext,JXHotel.Domain" mapTo="JXHotel.Repository.EntityFrameworkContext,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IAppAccountRepository,JXHotel.Domain" mapTo="JXHotel.Repository.AppAccountRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IAppRoleRepository,JXHotel.Domain" mapTo="JXHotel.Repository.AppRoleRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IAppUserRepository,JXHotel.Domain" mapTo="JXHotel.Repository.AppUserRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.ICustomerRepository,JXHotel.Domain" mapTo="JXHotel.Repository.CustomerRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.ICustomerRoleRepository,JXHotel.Domain" mapTo="JXHotel.Repository.CustomerRoleRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IDiscountPromotionRepository,JXHotel.Domain" mapTo="JXHotel.Repository.DiscountPromotionRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IHotelCategoryRepository,JXHotel.Domain" mapTo="JXHotel.Repository.HotelCategoryRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IHotelRepository,JXHotel.Domain" mapTo="JXHotel.Repository.HotelRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IHotelRoleRepository,JXHotel.Domain" mapTo="JXHotel.Repository.HotelRoleRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IHotelRoomCategoryRepository,JXHotel.Domain" mapTo="JXHotel.Repository.HotelRoomCategoryRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IHotelUserRepository,JXHotel.Domain" mapTo="JXHotel.Repository.HotelUserRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IOverGivePromotionRepository,JXHotel.Domain" mapTo="JXHotel.Repository.OverGivePromotionRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IOverMinusPromotionRepository,JXHotel.Domain" mapTo="JXHotel.Repository.OverMinusPromotionRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IReservationRepository,JXHotel.Domain" mapTo="JXHotel.Repository.ReservationRepository,JXHotel.Repository"></register>
      <register type="JXHotel.Domain.Repository.IRoomRepository,JXHotel.Domain" mapTo="JXHotel.Repository.RoomRepository,JXHotel.Repository"></register>

      <!--<register type="JXHotel.Domain.Repository.IRoomRepository`1[JXHotel.Domain.Model.HotelPromotion,JXHotel.Domain],JXHotel.Domain" mapTo="JXHotel.Repository.RoomRepository,JXHotel.Repository"></register>-->

      <!--Domain Service-->
      <register type="JXHotel.Domain.Service.IAppUserRoleService,JXHotel.Domain" mapTo="JXHotel.Domain.Service.AppUserRoleService,JXHotel.Domain"></register>    
      <register type="JXHotel.Domain.Service.ICustomerRoleService,JXHotel.Domain" mapTo="JXHotel.Domain.Service.CustomerRoleService,JXHotel.Domain"></register>  
      <register type="JXHotel.Domain.Service.IHotelCategoryService,JXHotel.Domain" mapTo="JXHotel.Domain.Service.HotelCategoryService,JXHotel.Domain"></register>    
      <register type="JXHotel.Domain.Service.IHotelPromotionCustomerRoleService,JXHotel.Domain" mapTo="JXHotel.Domain.Service.HotelPromotionCustomerRoleService,JXHotel.Domain"></register>
      <register type="JXHotel.Domain.Service.IHotelPromotionRoomCategoryService,JXHotel.Domain" mapTo="JXHotel.Domain.Service.HotelPromotionRoomCategoryService,JXHotel.Domain"></register>
      <register type="JXHotel.Domain.Service.IHotelRoomCategoryService,JXHotel.Domain" mapTo="JXHotel.Domain.Service.HotelRoomCategoryService,JXHotel.Domain"></register>
      <register type="JXHotel.Domain.Service.IHotelUserRoleService,JXHotel.Domain" mapTo="JXHotel.Domain.Service.HotelUserRoleService,JXHotel.Domain"></register>

      <!--Domain EventHandler-->
      <register type="JXHotel.Domain.Event.IDomainEventHandler`1[JXHotel.Domain.Event.ReservationCanceledEvent,JXHotel.Domain],JXHotel.Domain" mapTo="JXHotel.Domain.Event.Handler.ReservationCanceledEventHandler,JXHotel.Domain"></register>
      <register type="JXHotel.Domain.Event.IDomainEventHandler`1[JXHotel.Domain.Event.ReservationPaidedEvent,JXHotel.Domain],JXHotel.Domain" mapTo="JXHotel.Domain.Event.Handler.ReservationPaidedEventHandler,JXHotel.Domain"></register>
      
      <!--EventHandler-->
      <register name="ReservationCanceledsendemail" type="JXHotel.Event.IEventHandler`1[JXHotel.Domain.Event.ReservationCanceledEvent,JXHotel.Domain],JXHotel.Event" mapTo="JXHotel.Event.Handler.SendEmailHandler,JXHotel.Event"></register>
      <register name="ReservationPaidedsendemail" type="JXHotel.Event.IEventHandler`1[JXHotel.Domain.Event.ReservationPaidedEvent,JXHotel.Domain],JXHotel.Event" mapTo="JXHotel.Event.Handler.SendEmailHandler,JXHotel.Event"></register>


      <!--EventAggregator-->
      <register type="JXHotel.Event.IEventAggregator, JXHotel.Event" mapTo="JXHotel.Event.EventAggregator, JXHotel.Event">
        <constructor>
          <param name="handlers">
            <array>
              <dependency name="ReservationCanceledsendemail" type="JXHotel.Event.IEventHandler`1[JXHotel.Domain.Event.ReservationCanceledEvent,JXHotel.Domain],JXHotel.Event" />
              <dependency name="ReservationPaidedsendemail"   type="JXHotel.Event.IEventHandler`1[JXHotel.Domain.Event.ReservationPaidedEvent,JXHotel.Domain],JXHotel.Event" />
            </array>
          </param>
        </constructor>
      </register>

      <!--Event Bus-->
      <register type="JXHotel.Event.Bus.IEventBus,JXHotel.Event" mapTo="JXHotel.Event.Bus.EventBus,JXHotel.Event"></register>

      <register type="JXHotel.Infrastructure.Caching.ICacheProvider, ByteartRetail.Infrastructure" mapTo="JXHotel.Infrastructure.Caching.EntLibCacheProvider, ByteartRetail.Infrastructure.Caching" />


      <!--Application service-->
      <register type="JXHotel.Application.Contract.IAppAccountService,JXHotel.Application" mapTo="JXHotel.Application.Imp.AppAccountService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>

      
      
      <register type="JXHotel.Application.Contract.IAppUserUserService,JXHotel.Application" mapTo="JXHotel.Application.Imp.AppUserUserService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>
      
      

      <register type="JXHotel.Application.Contract.ICustomerService,JXHotel.Application" mapTo="JXHotel.Application.Imp.CustomerService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>

      <register type="JXHotel.Application.Contract.IDiscountPromotionService,JXHotel.Application" mapTo="JXHotel.Application.Imp.DiscountPromotionService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>
     
      
      <register type="JXHotel.Application.Contract.IHotelService,JXHotel.Application" mapTo="JXHotel.Application.Imp.HotelService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>

      <register type="JXHotel.Application.Contract.IHotelUserService,JXHotel.Application" mapTo="JXHotel.Application.Imp.HotelUserService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>

      <register type="JXHotel.Application.Contract.IOverGivePromotionService,JXHotel.Application" mapTo="JXHotel.Application.Imp.OverGivePromotionService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>

      <register type="JXHotel.Application.Contract.IOverMinusPromotionSerivice,JXHotel.Application" mapTo="JXHotel.Application.Imp.OverMinusPromotionSerivice,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>

      <register type="JXHotel.Application.Contract.IReservationService,JXHotel.Application" mapTo="JXHotel.Application.Imp.ReservationService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>

      <register type="JXHotel.Application.Contract.IRoomService,JXHotel.Application" mapTo="JXHotel.Application.Imp.RoomService,JXHotel.Application">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.CachingBehavior, JXHotel.Infrastructure" />
        <interceptionBehavior type="JXHotel.Infrastructure.InterceptionBehaviors.ExceptionLoggingBehavior, JXHotel.Infrastructure" />
      </register>
      
      
      
    </container>
  </unity>
</configuration>